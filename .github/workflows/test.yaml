on:
  push:
    branches: [master]
  pull_request:
name: test

jobs:
  os-check:
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }} / stable
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install Protoc
        uses: arduino/setup-protoc@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install stable
        uses: dtolnay/rust-toolchain@stable
      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile
      - name: cargo test --workspace
        run: cargo test --no-run --workspace --locked --all-features --all-targets

  coverage:
    runs-on: ubuntu-latest
    env:
      DATABASE_USERNAME: ${{ secrets.TEST_DATABASE_USERNAME }}
      DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}
      DATABASE_PASSWORD: ${{ secrets.TEST_DATABASE_PASSWORD }}
      REDIS_HOST: ${{ secrets.TEST_REDIS_HOST }}
      REDIS_PORT: 6379
      DATABASE_NAME: ${{ secrets.TEST_DATABASE_NAME }}
      DATABASE_NAMESPACE: ${{ secrets.TEST_DATABASE_NAMESPACE }}
    name: ubuntu / stable / coverage
    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    steps:
      - name: setup surreal
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://install.surrealdb.com | sh
          surreal start --log trace --auth --user $DATABASE_USERNAME --pass $DATABASE_PASSWORD memory &
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install Protoc
        uses: arduino/setup-protoc@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install stable
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview
      - name: cargo install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: cargo llvm-cov
        run: cargo llvm-cov --workspace --locked --all-features --lcov --output-path lcov.info
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
